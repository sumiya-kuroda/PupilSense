import os

# Params
INPUT_LIST = "eyevideo_abcd_inference.txt"

# Load input list from a file
with open(INPUT_LIST) as f:
    input_files = [line.strip() for line in f if line.strip()]

def get_prediction_path(path):
    base_dir = os.path.dirname(path)
    pupil_prediction = os.path.join(base_dir, "pupil_prediction")
    return os.path.join(pupil_prediction, "pupilsense_output.p")

# Mapping 
pkl_files = [get_prediction_path(p) for p in input_files]
pkl_to_mp4 = dict(zip(pkl_files, input_files))

# Rules
rule all:
    input:
        pkl_files,

rule inference:
    input:
        mp4 = lambda wildcards: pkl_to_mp4.get(f"{wildcards.output}", "")
    output:
        pkl =  "{output}"
    wildcard_constraints:
        output = ".*p"
    resources:
        slurm_partition="gpu",
        gres="gpu:1",
        cpus_per_gpu=24
    shell:
        """
        source /etc/profile.d/modules.sh
        module load cuda/12.4
        module load miniconda
        source activate pupilsense2

        python -u ../pupilsense/infer_pupil.py {input.mp4}
        """